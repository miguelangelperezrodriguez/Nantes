 // Code generated by Icestudio 0.4.0
// Sat, 21 Sep 2019 20:57:32 GMT

// Testbench template

`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 1 ns / 1 ns


module jk_tb
;

 // Simulation time: 100ns (10 * 10ns)
 parameter DURATION = 10;

 // Input/Output
 reg tb_clk;
 reg tb_J;
 reg tb_K;
 reg tb_control;
 wire tb_Q;
 wire tb_Q1;
 reg tb_A_nand;
 reg tb_B_nand;
 reg tb_A_nor;
 reg tb_B_nor;
 reg tb_A_notexor;
 reg tb_B_notexor;
 reg tb_A_notexor_nmos;
 reg tb_B_notexor_nmos;
 reg tb_A_notexor_pmos;
 reg tb_B_notexor_pmos;


 reg tb_in_ctrl0,tb_in_ctrl1,tb_in_ctrl2;


 reg [7:0]tb_in_cod;

 reg [7:0]tb_in_datos;

 reg  tb_in_crtl_mux2to1;
 reg  tb_in1_mux2to1;
 reg  tb_in2_mux2to1;

reg tb_in_ctrl_mux2c;
reg tb_in_a0_mux2c;
reg tb_in_a1_mux2c;
reg tb_in_b0_mux2c;
reg tb_in_b1_mux2c;

reg [31:0]tb_in_serializador;

reg [7:0]tb_A_bus8;
reg [7:0]tb_B_bus8;
reg tb_ctrl_bus8;

reg tb_A0_transf;
reg tb_A1_transf;
reg tb_A2_transf;

reg tb_ss_A;
reg tb_ss_B;
reg tb_ss_Ce;

reg [7:0]tb_A_la_8;
reg [7:0]tb_B_la_8;

reg [7:0] tb_A_addsub;
reg [7:0] tb_B_addsub;
reg tb_S_R;


reg [7:0] tb_A_ALU;
reg [7:0] tb_B_ALU;  // ALU 8-bit Inputs
reg [4:0] tb_sel_ALU;     // ALU Selection

reg [1:0] tb_W_deco2x4;

reg tb_D;

reg [1:0] tb_mux_42_ctrl;
reg [3:0] tb_mux_42_in;

reg tb_W_banco;
reg tb_R_banco;
reg tb_Gw_banco;
reg tb_Gr_banco;
reg [4:0] tb_E_banco;

reg tb_cont_ena;
reg tb_cont_res;

 wire tb_inversor;
 wire tb_mux21;
 wire tb_nand;
 wire tb_nor;
 wire tb_notexor;
 wire tb_notexor_nmos;
 wire tb_notexor_pmos;

 wire tb_outA0_cod;
 wire tb_outA1_cod;
 wire tb_outA2_cod;

 wire tb_out_mux83;

 wire tb_out_mux2to1;

wire tb_out0_mux2c;
wire tb_out1_mux2c;

wire [7:0]tb_out_serializador;

wire [7:0]tb_D_bus8;

wire tb_B0_transf;

wire  tb_ss_S;
wire  tb_ss_Cs;

wire tb_Suma_la_8;

wire tb_AddSub_8;

wire tb_OUT_ALU;    // ALU 8-bit Output
wire tb_Carry_ALU;  // Carry Out Flag

wire [3:0] tb_salida_deco2x4;

wire tb_dQ;
wire tb_dQ1;

wire tb_mux_42_out;

wire [4:0] tb_S_banco;

wire [7:0] tb_cont_out;
 // Module instance
jk instancia_jk (
  .clk(tb_clk),
  .J(tb_J),
  .K(tb_K),
  .Q(tb_Q),
  .Q1(tb_Q1)
 );

inv_sw instancia_inv_sw (
  .out (tb_inversor),
  .in(tb_Q)
);

mux21_sw instancia_mux21_sw (
  .out (tb_mux21),
  .ctrl(tb_control),
  .in1(tb_Q),
  .in2(tb_Q1)
);

nand_sw instancia_nand_sw (
  .out (tb_nand),
  .A(tb_A_nand),
  .B(tb_B_nand)
);

nor_sw instancia_nor_sw (
  .out (tb_nor),
  .A (tb_A_nor),
  .B (tb_B_nor)
);

not_exor instancia_not_exor (
  .out (tb_notexor),
  .a   (tb_A_notexor),
  .b   (tb_B_notexor)
);

not_exor_nmos instancia_not_exor_nmos (
  .out (tb_notexor_nmos),
  .a (tb_A_notexor_nmos),
  .b (tb_B_notexor_nmos)
);

not_exor_pmos instancia_not_exor_pmos (
    .out (tb_notexor_pmos),
    .a  (tb_A_notexor_pmos),
    .b  (tb_B_notexor_pmos)
);

cod_Prioridad instancia_cod_Prior (
    .I (tb_in_cod),
    .A0 (tb_outA0_cod),
    .A1 (tb_outA1_cod),
    .A2 (tb_outA2_cod)
);


mux2xcanal2 instancia_mux2xcanal2 (
  .out0 (tb_out0_mux2c),
  .out1 (tb_out1_mux2c),
  .ctrl (tb_in_ctrl_mux2c),
  .a0   (tb_in_a0_mux2c),
  .a1   (tb_in_a1_mux2c),
  .b0   (tb_in_b0_mux2c),
  .b1   (tb_in_b1_mux2c)
);


mux2to1 instancia_mux2to1 (
  .out (tb_out_mux2to1),
  .ctrl (tb_in_crtl_mux2to1),
  .in1  (tb_in1_mux2to1),
  .in2  (tb_in2_mux2to1)
  );

ser32to8 instancia_serializador (
      .clk (tb_clk),
      .in (tb_in_serializador),
      .out (tb_out_serializador)
      );

mux_bus8 instacia_bus8 (
     .A (tb_A_bus8),
     .B (tb_B_bus8),
     .ctrl (tb_ctrl_bus8),
     .D (tb_D_bus8)
     );


transformador_mux_senales instancia_transformador (
    .t_B0 (tb_B0_transf),
    .t_A0 (tb_A0_transf),
    .t_A1 (tb_A1_transf),
    .t_A2 (tb_A2_transf)
  );

semisumador_completo instancia_semisumador (
  .A  (tb_ss_A),
  .B  (tb_ss_B),
  .Ci (tb_ss_Ce),
  .S  (tb_ss_S),
  .Cs (tb_ss_Cs)
);

carry_lookahead_adder_8_bit inst_carry_look_adder8
  (
    .i_add1 (tb_A_la_8),
    .i_add2 (tb_B_la_8),
    .o_result (tb_Suma_la_8)
  );

carry_lookahead_adder_subber_8_bit  inst_addsub
  (
    .i_add1 (tb_A_addsub),
    .i_add2 (tb_B_addsub),
    .S_R (tb_S_R),
    .o_result (tb_AddSub_8)
  );

alu  inst_ALU (
  .clk (tb_clk),
  .A(tb_A_ALU),
  .B(tb_B_ALU),  // ALU 8-bit Inputs
  .ALU_Sel(tb_sel_ALU),     // ALU Selection
  .ALU_Out(tb_OUT_ALU), // ALU 8-bit Output
  .CarryOut(tb_Carry_ALU)            // Carry Out Flag
);

decodf_2_4 inst_deco2x4 (
    .W(tb_W_deco2x4),
    .salida(tb_salida_deco2x4)
);

dq instancia_dq (
  .D (tb_D),
  .clk (tb_clk),
  .d_Q (tb_dQ),
  .d_Q1 (tb_dQ1)
);

mux42_sw inst_mux42 (
  .out_42 (tb_mux_42_out),
  .ctrl_42 (tb_mux_42_ctrl),
  .in_42 (tb_mux_42_in)
);

banco_registros2x5bits banco1 (
  .W_banco (tb_W_banco),
  .R_banco (tb_R_banco),
  .Gw (tb_Gw_banco),
  .Gr (tb_Gr_banco),
  .E  (tb_E_banco),
  .S  (tb_S_banco)
);


 // Clock signal
 always #0.5 tb_clk = ~tb_clk;

 initial begin
  // File were to store the simulation results
  $dumpfile(`DUMPSTR(`VCD_OUTPUT));
  $dumpvars(0, jk_tb);

  // TODO: initialize the registers here
  // e.g. value = 1;
  // e.g. #2 value = 0;
  tb_clk = 1;

  $monitor("J=%b K=%b Q=%b Q1=%b inv=%b tiempo=%0dns",tb_J,tb_K,tb_Q,
    tb_Q1,tb_inversor,$time);
  tb_J=0;
  tb_K=0;
  tb_control=tb_J & tb_K;

  #60;

  $finish;
 end

 always begin
 tb_A_nor=0;
 tb_B_nor=0;
  #10;
  tb_J=0;
  tb_K=1;
  tb_control=0;
  tb_A_nor=0;
  tb_B_nor=0;

  tb_A_notexor=0;
  tb_B_notexor=0;

  tb_A_notexor_nmos=0;
  tb_B_notexor_nmos=0;

  tb_A_notexor_pmos=0;
  tb_B_notexor_pmos=0;

  tb_in_cod=8'b10000000;

  tb_in_a0_mux2c = 0;
  tb_in_a1_mux2c = 1;
  tb_in_b0_mux2c = 1;
  tb_in_b1_mux2c = 0;

  tb_in_ctrl_mux2c = 0;

  tb_in_serializador = 32'h6655;

  tb_A_bus8 = 8'b01111001;
  tb_B_bus8 = 8'b11100011;
  tb_ctrl_bus8 = 0;

  tb_A2_transf = 0;
  tb_A1_transf = 1;
  tb_A0_transf = 1;

  tb_in_ctrl0 = 0;
  tb_in_ctrl1 = 0;
  tb_in_ctrl2 = 0;
  tb_in_datos = 8'b00001010;

  tb_in_crtl_mux2to1 = 0;
  tb_in1_mux2to1 = 0;
  tb_in2_mux2to1 = 1;

  tb_ss_A   = 0;
  tb_ss_B   = 0;
  tb_ss_Ce  = 0;

  tb_A_la_8 = 8'b00100111;
  tb_B_la_8 = 8'b00000001;

  tb_A_addsub = 8'b01100100;
  tb_B_addsub = 8'b00010100;
  tb_S_R = 0;

  tb_W_deco2x4 = 2'b00;

  tb_D = 1'b0;

  tb_mux_42_ctrl = 2'b00;
  tb_mux_42_in   = 4'b1010;

  tb_W_banco = 0; // Primera palabra
  tb_Gw_banco = 0;
  tb_Gr_banco = 1;
  tb_R_banco = 0;
  tb_E_banco = 5'b10101;

  tb_cont_ena=1'b0;
  tb_cont_res=1'b1;

  tb_A_ALU    = 8'b00000000;
  tb_sel_ALU  = 5'b10011;



  #10;
  tb_J=1;
  tb_K=1;
  tb_control=1;
  tb_A_nor=0;
  tb_B_nor=1;

  tb_A_notexor=0;
  tb_B_notexor=1;

  tb_A_notexor_nmos=0;
  tb_B_notexor_nmos=1;

  tb_A_notexor_pmos=0;
  tb_B_notexor_pmos=1;

  tb_in_cod=8'b00000001;

  tb_in_a0_mux2c = 0;
  tb_in_a1_mux2c = 1;
  tb_in_b0_mux2c = 1;
  tb_in_b1_mux2c = 0;

  tb_in_ctrl_mux2c = 1;

  tb_B_bus8 = 8'b01111001;
  tb_A_bus8 = 8'b11100011;
  tb_ctrl_bus8 = 1;

  tb_A2_transf = 0;
  tb_A1_transf = 0;
  tb_A0_transf = 1;

  tb_in_ctrl0 = 1;
  tb_in_ctrl1 = 0;
  tb_in_ctrl2 = 0;

  tb_in_crtl_mux2to1 = 0;
  tb_in1_mux2to1 = 1;
  tb_in2_mux2to1 = 0;

  tb_ss_A   = 0;
  tb_ss_B   = 0;
  tb_ss_Ce  = 1;

  tb_A_la_8 = 8'b11110100;
  tb_B_la_8 = 8'b01100101;

  tb_A_addsub = 8'b00110010;
  tb_B_addsub = 8'b00010001;
  tb_S_R = 1;

  tb_W_deco2x4 = 2'b01;

  tb_D = 1'b1;

  tb_mux_42_ctrl = 2'b01;
  tb_mux_42_in   = 4'b1010;

  tb_W_banco = 1; // Primera palabra
  tb_Gw_banco = 0;
  tb_Gr_banco = 1;
  tb_R_banco = 0;
  tb_E_banco = 5'b11110;

  tb_cont_ena=1'b1;
  tb_cont_res=1'b0;

  tb_A_ALU    = 8'b00000001;
  tb_sel_ALU  = 5'b10011;



  #10;
  tb_J=0;
  tb_K=0;
  tb_control=0;
  tb_A_nor=1;
  tb_B_nor=1;

  tb_A_notexor=1;
  tb_B_notexor=0;

  tb_A_notexor_nmos=1;
  tb_B_notexor_nmos=0;

  tb_A_notexor_pmos=1;
  tb_B_notexor_pmos=0;

  tb_in_cod = 8'b00101010;

  tb_in_a0_mux2c = 0;
  tb_in_a1_mux2c = 0;
  tb_in_b0_mux2c = 1;
  tb_in_b1_mux2c = 1;

  tb_in_ctrl_mux2c = 0;

  tb_A2_transf = 0;
  tb_A1_transf = 1;
  tb_A0_transf = 0;

  tb_in_ctrl0 = 1;
  tb_in_ctrl1 = 1;
  tb_in_ctrl2 = 0;

  tb_in_crtl_mux2to1 = 1;
  tb_in1_mux2to1 = 0;
  tb_in2_mux2to1 = 1;

  tb_ss_A   = 1;
  tb_ss_B   = 0;
  tb_ss_Ce  = 1;

  tb_A_la_8 = 8'b00000000;
  tb_B_la_8 = 8'b01100101;

  tb_A_addsub = 8'b11111111;
  tb_B_addsub = 8'b01110110;
  tb_S_R = 1;

  tb_W_deco2x4 = 2'b10;

  tb_D = 1'b1;

  tb_mux_42_ctrl = 2'b10;
  tb_mux_42_in   = 4'b1010;

  tb_W_banco = 0; // Primera palabra
  tb_Gw_banco = 1;
  tb_Gr_banco = 0;
  tb_R_banco = 0;
  tb_E_banco = 5'b10101;

  tb_cont_ena=1'b1;
  tb_cont_res=1'b0;

  tb_A_ALU    = 8'b00000001;
  tb_sel_ALU  = 5'b10011;

  #10;
  tb_J=1;
  tb_K=0;
  tb_control=0;
  tb_A_nor=1;
  tb_B_nor=0;

  tb_A_notexor=1;
  tb_B_notexor=1;

  tb_A_notexor_nmos=1;
  tb_B_notexor_nmos=1;

  tb_A_notexor_pmos=1;
  tb_B_notexor_pmos=1;

  tb_in_cod=8'b00000011;

  tb_in_a0_mux2c = 0;
  tb_in_a1_mux2c = 0;
  tb_in_b0_mux2c = 1;
  tb_in_b1_mux2c = 1;

  tb_in_ctrl_mux2c = 1;

  tb_A2_transf = 0;
  tb_A1_transf = 1;
  tb_A0_transf = 1;

  tb_in_ctrl0 = 1;
  tb_in_ctrl1 = 1;
  tb_in_ctrl2 = 1;

  tb_in_crtl_mux2to1 = 1;
  tb_in1_mux2to1 = 1;
  tb_in2_mux2to1 = 0;

  tb_ss_A   = 1;
  tb_ss_B   = 1;
  tb_ss_Ce  = 0;

  tb_A_la_8 = 8'b11111111;
  tb_B_la_8 = 8'b11111111;

  tb_A_addsub = 8'b00000000;
  tb_B_addsub = 8'b00000000;
  tb_S_R = 1;

  tb_A_addsub = 8'b01110110;
  tb_B_addsub = 8'b11111111;
  tb_S_R = 1;

  tb_W_deco2x4 = 2'b11;

  tb_D = 1'b0;

  tb_mux_42_ctrl = 2'b11;
  tb_mux_42_in   = 4'b1010;

  tb_R_banco = 1;
  tb_W_banco = 1; // Primera palabra
  tb_Gw_banco = 1;
  tb_Gr_banco = 0;
  tb_E_banco = 5'b11101;

  tb_cont_ena=1'b1;
  tb_cont_res=1'b0;

  tb_A_ALU    = 8'b00000001;
  tb_sel_ALU  = 5'b10011;


  #10;
  tb_J=1;
  tb_K=1;
  tb_control=1;
  tb_A_nor=1;
  tb_B_nor=1;

  tb_A_notexor=0;
  tb_B_notexor=0;

  tb_A_notexor_nmos=0;
  tb_B_notexor_nmos=0;

  tb_A_notexor_pmos=0;
  tb_B_notexor_pmos=0;

  tb_in_cod=8'b00011000;

  tb_A2_transf = 1;
  tb_A1_transf = 1;
  tb_A0_transf = 1;

  tb_in_crtl_mux2to1 = 0;
  tb_in1_mux2to1 = 1;
  tb_in2_mux2to1 = 1;

  tb_D = 1'b0;

  tb_cont_ena=1'b0;
  tb_cont_res=1'b1;

  tb_A_ALU    = 8'b00000001;
  tb_sel_ALU  = 5'b10011;


 end

endmodule
